(set-logic QF_BV)
(declare-fun v1 () (_ BitVec 1)) 
(declare-fun v2 () (_ BitVec 1)) 
(declare-fun v3 () (_ BitVec 1)) 
(declare-fun v4 () (_ BitVec 1)) 
(declare-fun v5 () (_ BitVec 1)) 
(declare-fun v6 () (_ BitVec 1)) 
(declare-fun v7 () (_ BitVec 1)) 
(declare-fun v8 () (_ BitVec 1)) 
(declare-fun v9 () (_ BitVec 1)) 
(declare-fun v10 () (_ BitVec 1)) 
(define-fun $e11 () (_ BitVec 1) (bvand v1 v7))
(define-fun $e12 () (_ BitVec 1) (bvand v2 v6))
(define-fun $e13 () (_ BitVec 1) (bvand $e11 $e12))
(define-fun $e14 () (_ BitVec 1) (bvand v1 v6))
(define-fun $e15 () (_ BitVec 1) (bvand $e13 $e14))
(define-fun $e16 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot (bvand (bvnot $e11) (bvnot $e12)))))
(define-fun $e17 () (_ BitVec 1) (bvand v2 v7))
(define-fun $e18 () (_ BitVec 1) (bvand v3 v6))
(define-fun $e19 () (_ BitVec 1) (bvand v1 v8))
(define-fun $e20 () (_ BitVec 1) (bvand $e17 $e19))
(define-fun $e21 () (_ BitVec 1) (bvand (bvnot (bvand $e17 $e18)) (bvand (bvnot $e20) (bvnot (bvand $e18 $e19)))))
(define-fun $e22 () (_ BitVec 1) (bvand $e16 (bvnot $e21)))
(define-fun $e23 () (_ BitVec 1) (bvand (bvnot $e15) (bvnot (bvand (bvnot $e13) (bvnot $e14)))))
(define-fun $e24 () (_ BitVec 1) (bvand $e22 $e23))
(define-fun $e25 () (_ BitVec 1) (bvand (bvnot $e20) (bvnot (bvand (bvnot $e17) (bvnot $e19)))))
(define-fun $e26 () (_ BitVec 1) (bvand (bvnot (bvand (bvnot $e18) (bvnot $e25))) (bvnot (bvand $e18 $e25))))
(define-fun $e27 () (_ BitVec 1) (bvand v2 v8))
(define-fun $e28 () (_ BitVec 1) (bvand v3 v7))
(define-fun $e29 () (_ BitVec 1) (bvand v1 v9))
(define-fun $e30 () (_ BitVec 1) (bvand $e27 $e29))
(define-fun $e31 () (_ BitVec 1) (bvand (bvnot (bvand $e27 $e28)) (bvand (bvnot $e30) (bvnot (bvand $e28 $e29)))))
(define-fun $e32 () (_ BitVec 1) (bvand $e26 (bvnot $e31)))
(define-fun $e33 () Bool (= $e16 $e21))
(define-fun $e34 () (_ BitVec 1) (bvand $e32 (ite $e33 #b1 #b0)))
(define-fun $e35 () Bool (= $e26 $e31))
(define-fun $e36 () (_ BitVec 1) (bvand v4 v7))
(define-fun $e37 () (_ BitVec 1) (bvand v5 v6))
(define-fun $e38 () (_ BitVec 1) (bvand $e36 $e37))
(define-fun $e39 () (_ BitVec 1) (bvand (bvnot $e30) (bvnot (bvand (bvnot $e27) (bvnot $e29)))))
(define-fun $e40 () (_ BitVec 1) (bvand (bvnot (bvand (bvnot $e28) (bvnot $e39))) (bvnot (bvand $e28 $e39))))
(define-fun $e41 () (_ BitVec 1) (bvand v1 v10))
(define-fun $e42 () (_ BitVec 1) (bvand v2 v9))
(define-fun $e43 () (_ BitVec 1) (bvand $e41 $e42))
(define-fun $e44 () (_ BitVec 1) (bvand v3 v8))
(define-fun $e45 () (_ BitVec 1) (bvand (bvand (bvnot $e43) (bvnot (bvand $e41 $e44))) (bvnot (bvand $e42 $e44))))
(define-fun $e46 () (_ BitVec 1) (bvand (bvnot (bvand $e38 $e40)) (bvand (bvnot (bvand $e38 (bvnot $e45))) (bvnot (bvand $e40 (bvnot $e45))))))
(define-fun $e47 () (_ BitVec 1) (bvand v4 v6))
(define-fun $e48 () (_ BitVec 1) (bvand v2 v10))
(define-fun $e49 () (_ BitVec 1) (bvand v3 v9))
(define-fun $e50 () (_ BitVec 1) (bvand $e48 $e49))
(define-fun $e51 () (_ BitVec 1) (bvand v4 v8))
(define-fun $e52 () (_ BitVec 1) (bvand (bvand (bvnot $e50) (bvnot (bvand $e48 $e51))) (bvnot (bvand $e49 $e51))))
(define-fun $e53 () (_ BitVec 1) (bvand (bvnot $e43) (bvnot (bvand (bvnot $e41) (bvnot $e42)))))
(define-fun $e54 () (_ BitVec 1) (bvand (bvnot (bvand (bvnot $e44) (bvnot $e53))) (bvnot (bvand $e44 $e53))))
(define-fun $e55 () (_ BitVec 1) (bvand (bvnot $e38) (bvnot (bvand (bvnot $e36) (bvnot $e37)))))
(define-fun $e56 () (_ BitVec 1) (bvand (bvand (bvnot (bvand (bvnot $e52) $e54)) (bvnot (bvand (bvnot $e52) $e55))) (bvnot (bvand $e54 $e55))))
(define-fun $e57 () Bool (= $e38 $e45))
(define-fun $e58 () (_ BitVec 1) (bvand (bvnot (bvand (bvnot $e40) (bvnot (ite $e57 #b1 #b0)))) (bvnot (bvand $e40 (ite $e57 #b1 #b0)))))
(define-fun $e59 () Bool (= $e56 $e58))
(define-fun $e60 () Bool (= $e52 $e54))
(define-fun $e61 () (_ BitVec 1) (bvand (bvnot (bvand (bvnot $e55) (bvnot (ite $e60 #b1 #b0)))) (bvnot (bvand $e55 (ite $e60 #b1 #b0)))))
(define-fun $e62 () (_ BitVec 1) (bvand (bvnot $e50) (bvnot (bvand (bvnot $e48) (bvnot $e49)))))
(define-fun $e63 () (_ BitVec 1) (bvand (bvnot (bvand (bvnot $e51) (bvnot $e62))) (bvnot (bvand $e51 $e62))))
(define-fun $e64 () (_ BitVec 1) (bvand v5 v7))
(define-fun $e65 () (_ BitVec 1) (bvand v3 v10))
(define-fun $e66 () (_ BitVec 1) (bvand v4 v9))
(define-fun $e67 () (_ BitVec 1) (bvand $e65 $e66))
(define-fun $e68 () (_ BitVec 1) (bvand v5 v8))
(define-fun $e69 () (_ BitVec 1) (bvand (bvand (bvnot $e67) (bvnot (bvand $e65 $e68))) (bvnot (bvand $e66 $e68))))
(define-fun $e70 () (_ BitVec 1) (bvand (bvnot (bvand $e63 $e64)) (bvand (bvnot (bvand $e63 (bvnot $e69))) (bvnot (bvand $e64 (bvnot $e69))))))
(define-fun $e71 () Bool (= $e63 $e69))
(define-fun $e72 () (_ BitVec 1) (bvand (bvnot (bvand (bvnot $e64) (bvnot (ite $e71 #b1 #b0)))) (bvnot (bvand $e64 (ite $e71 #b1 #b0)))))
(define-fun $e73 () (_ BitVec 1) (bvand (bvnot $e67) (bvnot (bvand (bvnot $e65) (bvnot $e66)))))
(define-fun $e74 () (_ BitVec 1) (bvand (bvnot (bvand (bvnot $e68) (bvnot $e73))) (bvnot (bvand $e68 $e73))))
(define-fun $e75 () (_ BitVec 1) (bvand v4 v10))
(define-fun $e76 () (_ BitVec 1) (bvand v5 v9))
(define-fun $e77 () (_ BitVec 1) (bvand $e75 $e76))
(define-fun $e78 () (_ BitVec 1) (bvand $e74 $e77))
(define-fun $e79 () (_ BitVec 1) (bvand $e72 $e78))
(define-fun $e80 () (_ BitVec 9) (concat (concat (concat (concat (concat (concat (concat (concat $e24 $e34) (bvand (ite $e35 #b1 #b0) (bvnot $e46))) (bvnot (bvand (bvnot (bvand $e47 $e58)) (bvand (bvnot (bvand (bvnot $e56) $e58)) (bvnot (bvand $e47 (bvnot $e56))))))) (bvand $e61 (bvnot $e70))) $e79) (bvand (bvnot $e79) (bvnot (bvand (bvnot $e72) (bvnot $e78))))) (bvand (bvnot $e78) (bvnot (bvand (bvnot $e74) (bvnot $e77))))) (bvand (bvnot $e77) (bvnot (bvand (bvnot $e75) (bvnot $e76))))))
(assert (not (= (bvadd (concat (concat (concat (concat (concat (concat $e15 (bvand (bvnot $e24) (bvnot (bvand (bvnot $e22) (bvnot $e23))))) (bvand (bvnot $e34) (bvnot (bvand (bvnot $e32) (bvnot (ite $e33 #b1 #b0)))))) (ite (= (ite $e35 #b1 #b0) $e46) #b1 #b0)) (bvand (bvnot (bvand (bvnot $e47) (bvnot (ite $e59 #b1 #b0)))) (bvnot (bvand $e47 (ite $e59 #b1 #b0))))) (ite (= $e61 $e70) #b1 #b0)) #b0000) (bvand (concat $e80 v5) (concat $e80 v10))) (bvmul (concat (concat (concat (concat (concat #b00000 v6) v7) v8) v9) v10) (concat (concat (concat (concat (concat #b00000 v1) v2) v3) v4) v5)))))
(check-sat)
(exit)

