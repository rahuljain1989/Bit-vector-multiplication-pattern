(set-logic QF_BV)
(declare-fun v1 () (_ BitVec 1)) 
(declare-fun v2 () (_ BitVec 1)) 
(declare-fun v3 () (_ BitVec 1)) 
(declare-fun v4 () (_ BitVec 1)) 
(declare-fun v5 () (_ BitVec 1)) 
(declare-fun v6 () (_ BitVec 1)) 
(declare-fun v7 () (_ BitVec 1)) 
(declare-fun v8 () (_ BitVec 1)) 
(define-fun $e9 () (_ BitVec 1) (bvand v1 v6))
(define-fun $e10 () (_ BitVec 1) (bvand v2 v5))
(define-fun $e11 () (_ BitVec 1) (bvand $e9 $e10))
(define-fun $e12 () (_ BitVec 1) (bvand v1 v5))
(define-fun $e13 () (_ BitVec 1) (bvand $e11 $e12))
(define-fun $e14 () (_ BitVec 1) (bvand (bvnot $e11) (bvnot (bvand (bvnot $e9) (bvnot $e10)))))
(define-fun $e15 () (_ BitVec 1) (bvand v2 v6))
(define-fun $e16 () (_ BitVec 1) (bvand v3 v5))
(define-fun $e17 () (_ BitVec 1) (bvand v1 v7))
(define-fun $e18 () (_ BitVec 1) (bvand $e15 $e17))
(define-fun $e19 () (_ BitVec 1) (bvand (bvnot (bvand $e15 $e16)) (bvand (bvnot $e18) (bvnot (bvand $e16 $e17)))))
(define-fun $e20 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot (bvand (bvnot $e15) (bvnot $e17)))))
(define-fun $e21 () (_ BitVec 1) (bvand (bvnot (bvand (bvnot $e16) (bvnot $e20))) (bvnot (bvand $e16 $e20))))
(define-fun $e22 () (_ BitVec 1) (bvand v2 v7))
(define-fun $e23 () (_ BitVec 1) (bvand v3 v6))
(define-fun $e24 () (_ BitVec 1) (bvand v1 v8))
(define-fun $e25 () (_ BitVec 1) (bvand $e22 $e24))
(define-fun $e26 () (_ BitVec 1) (bvand (bvnot (bvand $e22 $e23)) (bvand (bvnot $e25) (bvnot (bvand $e23 $e24)))))
(define-fun $e27 () (_ BitVec 1) (bvand v4 v5))
(define-fun $e28 () (_ BitVec 1) (bvand v2 v8))
(define-fun $e29 () (_ BitVec 1) (bvand v3 v7))
(define-fun $e30 () (_ BitVec 1) (bvand $e28 $e29))
(define-fun $e31 () (_ BitVec 1) (bvand v4 v6))
(define-fun $e32 () (_ BitVec 1) (bvand (bvand (bvnot $e30) (bvnot (bvand $e28 $e31))) (bvnot (bvand $e29 $e31))))
(define-fun $e33 () (_ BitVec 1) (bvand (bvnot $e25) (bvnot (bvand (bvnot $e22) (bvnot $e24)))))
(define-fun $e34 () (_ BitVec 1) (bvand (bvnot (bvand (bvnot $e23) (bvnot $e33))) (bvnot (bvand $e23 $e33))))
(define-fun $e35 () Bool (= $e32 $e34))
(define-fun $e36 () (_ BitVec 1) (bvand (bvnot $e30) (bvnot (bvand (bvnot $e28) (bvnot $e29)))))
(define-fun $e37 () (_ BitVec 1) (bvand (bvnot (bvand (bvnot $e31) (bvnot $e36))) (bvnot (bvand $e31 $e36))))
(define-fun $e38 () (_ BitVec 1) (bvand v3 v8))
(define-fun $e39 () (_ BitVec 1) (bvand v4 v7))
(define-fun $e40 () (_ BitVec 1) (bvand $e38 $e39))
(define-fun $e41 () (_ BitVec 1) (bvand $e37 $e40))
(define-fun $e42 () (_ BitVec 7) (concat (concat (concat (concat (concat (concat $e13 (bvand $e14 (bvnot $e19))) (bvand $e21 (bvnot $e26))) (bvnot (bvand (bvnot (bvand $e27 $e34)) (bvand (bvnot (bvand (bvnot $e32) $e34)) (bvnot (bvand $e27 (bvnot $e32))))))) $e41) (bvand (bvnot $e41) (bvnot (bvand (bvnot $e37) (bvnot $e40))))) (bvand (bvnot $e40) (bvnot (bvand (bvnot $e38) (bvnot $e39))))))
(assert (not (= (bvadd (concat (concat (concat (concat (concat #b0 (bvand (bvnot $e13) (bvnot (bvand (bvnot $e11) (bvnot $e12))))) (ite (= $e14 $e19) #b1 #b0)) (ite (= $e21 $e26) #b1 #b0)) (bvand (bvnot (bvand (bvnot $e27) (bvnot (ite $e35 #b1 #b0)))) (bvnot (bvand $e27 (ite $e35 #b1 #b0))))) #b000) (bvand (concat $e42 v4) (concat $e42 v8))) (bvmul (concat (concat (concat (concat #b0000 v5) v6) v7) v8) (concat (concat (concat (concat #b0000 v1) v2) v3) v4))))) 
(check-sat)
(exit)

